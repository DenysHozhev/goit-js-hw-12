import{a as h,S as g,i}from"./assets/vendor-Dn3QujGD.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const u of s.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&n(u)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();h.defaults.baseURL="https://pixabay.com/api/";async function p(e,r=1){const t={key:"49272449-54e018c7c1ace9d1b8dfc3596",q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:r};try{return(await h.get("",{params:t})).data}catch(n){throw console.error("Error fetching data from Pixabay API:",n),n}}const m=document.querySelector(".gallery");let b=new g(".gallery a");function v(e){const r=e.filter(t=>t.largeImageURL&&t.webformatURL&&t.tags);r.length>0?(m.insertAdjacentHTML("beforeend",r.map(t=>`
    <li class="gallery-item">
      <a class="gallery-link" href="${t.largeImageURL}">
        <img
          class="gallery-image"
          src="${t.webformatURL}"
          data-source="${t.largeImageURL}"
          alt="${t.tags}"
        />
      </a>
      <p>Likes: ${t.likes}</p>
      <p>Views: ${t.views}</p>
      <p>Comments: ${t.comments}</p>
      <p>Downloads:  ${t.downloads}</p>
    </li>`).join("")),b.refresh()):console.warn("No valid images to render.")}function R(){m.innerHTML=""}const y=document.querySelector(".form"),d=document.querySelector(".loader"),S=document.querySelector(".gallery"),l=document.querySelector(".js-button");let c="",a=1,f=0;const L=new g(".gallery a",{captions:!0,captionsData:"alt",captionDelay:250,animationSpeed:350});y.addEventListener("submit",$);l.addEventListener("click",I);async function $(e){if(e.preventDefault(),c=e.currentTarget.elements["search-text"].value.trim(),!!c){d.classList.remove("hidden"),R(),y.reset(),a=1;try{const{hits:r,totalHits:t}=await p(c,a);if(console.log("API Response:",{hits:r,totalHits:t}),!r||r.length===0){i.error({title:"Sorry",message:"No images found, please try another search.",position:"topRight"}),l.classList.add("hidden");return}f=t,w(r),L.refresh(),Math.ceil(f/15)===a?(i.show({title:"End of search",message:"You have reached the end of the collection.",position:"topRight"}),l.classList.add("hidden")):l.classList.remove("hidden")}catch(r){i.error({title:"Error",message:`Something went wrong: ${r.message}`,position:"topRight"})}finally{d.classList.add("hidden")}}}function w(e){Array.isArray(e)&&e.length>0?(console.log("Rendering images:",e),S.insertAdjacentHTML("beforeend",v(e)),L.refresh()):console.warn("No valid images to render.")}async function I(){if(a*15<f){d.classList.remove("hidden"),a+=1;try{const{hits:e}=await p(c,a);console.log("Hits on load more:",e),e&&e.length>0?w(e):console.warn("No more images found."),Math.ceil(f/15)===a&&(i.show({title:"End of search",message:"You have reached the end of the collection.",position:"topRight"}),l.classList.add("hidden"))}catch(e){i.error({title:"Error",message:`Something went wrong: ${e.message}`,position:"topRight"})}finally{d.classList.add("hidden")}}}
//# sourceMappingURL=index.js.map
